#version 450

layout(local_size_x = 32, local_size_y = 32, local_size_z = 1) in;

layout(binding = 0, r32f) uniform writeonly image2D outImage;
layout(binding = 1) uniform sampler2D inImage;

layout(push_constant) uniform block
{
	vec2 imageSize;
};

void main()
{
	uvec2 pos = gl_GlobalInvocationID.xy;

	// Sampler is set up to do min reduction, so this computes the minimum depth of a 2x2 texel quad
	vec2 texelPos = vec2(pos) + vec2(0.5);
	vec2 texCoord = texelPos / imageSize;
	#ifndef NO_MIN_MAX
	float depth = texture(inImage, texCoord).x;
	#else
	vec4 depth4 = textureGather(inImage, texCoord);
	float depth = max(max(depth4.x, depth4.y), max(depth4.z, depth4.w));
	#endif

	imageStore(outImage, ivec2(pos), vec4(depth));
}
